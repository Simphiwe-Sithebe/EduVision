<!DOCTYPE html>
<html>
  <head>
    <title>Welcome Online Exam</title>
    <link rel="stylesheet" type="text/css" href="/css/bootstrap.css" />
    <link rel="stylesheet" type="text/css" href="/css/main.css" />
    <link rel="stylesheet" type="text/css" href="/css/font/flaticon.css" />
    <!--<link href='https://fonts.googleapis.com/css?family=Fira+Sans|Josefin+Sans' rel='stylesheet'>-->
    <meta charset="UTF-8" />
    <meta name="description" content="Online Exam" />
    <meta name="author" content="Goodness Themba Chauke" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

	            <script>
        document.addEventListener('DOMContentLoaded', function() {
            window.addEventListener('beforeunload', function(event) {

                console.log("Trying to stop speaker of prev page.....");

                if (speechSynthesis.speaking) {
                     console.log("It is speaking so now you can stop it.");
                    speechSynthesis.cancel();
                }
            });
        });
    </script>
	</head>
	<body>
        <div class="oq-header">
            <div class="container-fluid">
              <div class="row">
                <div class="col-md-4">
                  <div class="">
                    <a href="index.php"
                      ><img src="/images/quiz.png" class="oq-logo"
                    /></a>
                  </div>
                </div>
                <div class="col-md-8">
                  <div class="oq-userArea pull-right">
                    <span class="oq-username">
                      <%= user.first_name + ' ' + user.last_name %>
                    </span>
                    <!-- <a class="btn btn-primary" href="logout.php?logout">Logout</a> -->
                    <a class="oq-btn btn btn-primary" href="/auth/logout">Logout</a>
                  </div>
                </div>
              </div>
            </div>
          </div>

        <div class="oq-scoreBoardBody">
        	<div class="oq-scoreBoard">
        		<div id="scoreboard">
                    <p id='scoreboard1'>Your result for  <%= moduleName +' '+ testName %> is : <span id="correctCount"></span> out of <span id="totalCount"></span> which is <span id="percentage"></span></p>
                    <p id='scoreboard2'><span id="feedback"></span>.</p>
                    <p id='scoreboard3'>You can visit your lecturer's office to get a printout report.</p>
        		</div>
        		<div>
        			<p id="retake">To take another test say the word "Menu" or say the word "STOP" to logout of the system.</p>
        			<p id="spresult"></p>
        		</div>
        	</div>
        </div>


		<script src="/js/currentUserResutl.js"></script>
        <script src="/js/jquery-3.1.1.min.js"></script>
        <script src="/js/bootstrap.js"></script>
        <script type="text/javascript">


			let countToLogOut = 0;


        	var resultPara = document.querySelector('#spresult');
        	var syn = window.speechSynthesis;
			var SpeechRecognition = SpeechRecognition || webkitSpeechRecognition;
			var SpeechGrammarList = SpeechGrammarList || webkitSpeechGrammarList;
			var SpeechRecognitionEvent = SpeechRecognitionEvent || webkitSpeechRecognitionEvent;
			var test;
			var testThis;
			speakScore(1);
			function speakScore(i){
				console.log("i"+i);
				test = document.getElementById("scoreboard"+i).textContent;
				testThis = new SpeechSynthesisUtterance(test);
				syn.speak(testThis);
				testThis.onend = function(event) {
					i++;
					if(i<=3){
						speakScore(i);
					}
					if(i>3){
						retest();
					}
				}
			}
			function retest(){
				test = document.getElementById("retake").textContent;
				testThis = new SpeechSynthesisUtterance(test);
				syn.speak(testThis);
				testThis.onend = function(event) {
					speakTest();
				}
			}
			function speakTest(){
				var words = "menu | stop";
				var flag=0;
				var grammar = '#JSGF V1.0; grammar phrase; public <phrase> = ' + words +';';
			    var recognition = new SpeechRecognition();
			    var speechRecognitionList = new SpeechGrammarList();
			    speechRecognitionList.addFromString(grammar, 1);
			    recognition.grammars = speechRecognitionList;
			    recognition.lang = 'en-US';
			    recognition.interimResults = false;
			    recognition.maxAlternatives = 1;
			    recognition.start();
			    console.log(SpeechRecognition);
			    recognition.onresult = function(event) {
			        var speechResult = event.results[0][0].transcript;
					console.log("speechResult.toLowerCase() : ", speechResult.toLowerCase());
			        if(speechResult == "menu" || speechResult.toLowerCase() == "menu" || speechResult.toLowerCase().includes("menu")  ) {
			        	flag = 1;
			        	window.location = '/';
			        }
			        else if(speechResult.toLowerCase() == "stop" || speechResult.toLowerCase().includes("stop") || speechResult.toLowerCase().includes("logout") || speechResult.toLowerCase().includes("log out")){
			        	flag = 2;
			        	window.location = '/auth/logout';
			        }else {
				        flag = 3;
				        resultPara.textContent = 'Speech received: ' + speechResult + '. No such operation.';
				        var syn = window.speechSynthesis;
				        var testhead = document.getElementById("spresult").textContent;
				        var testThis = new SpeechSynthesisUtterance(testhead);
				        syn.speak(testThis);
				        testThis.onend = function(event) {
				            console.log('speak time:' + event.elapsedTime + ' milliseconds.');
				            retest();
				        }
				    }
			    }
			    recognition.onend = function() {
					countToLogOut++;
					if(countToLogOut == 3){
						var saythis = "Unfortunately, I can't understand what you're saying at this time. I am logging you out of the system";
				        var sysThis = new SpeechSynthesisUtterance(saythis);
				        syn.speak(sysThis);
				        sysThis.onend = function(event) {
				            window.location = '/auth/logout';
				    }	
					}

			        if(flag == 1 || flag == 2 || flag == 3){
			        	console.log("onend if");
            			recognition.stop();
			        }else{
            			if(flag == 4){
            				recognition.stop();
            			}else{
            				console.log("onend else");
			                recognition.stop();
			                retest();
            			}
            		}
			    }
			    recognition.onerror = function(event) {
			        flag = 4;
					console.log("On Error.........");
			        console.log("flag :"+flag);
			        retest();
			    }
			}
        </script>
	</body>
</html>